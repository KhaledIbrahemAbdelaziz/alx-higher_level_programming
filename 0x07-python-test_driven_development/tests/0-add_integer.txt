# 0-add_integer.txt

===========================
How to use 0-add_integer.py
===========================

This module defines an integer addition function ``add_integer(a, b=98)``.

Usage
=====

``add_integer(...)``` returns the addition of its two arguments. For numbers,
that value is equivalent  to using the ``+`` operator.

::

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(2, 3)
    5

::

    >>> add_integer(2, -3)
    -1

This function works with the floating point values.

::

    >>> add_integer(2.0, 3.0)
    5

Notes that floats are casted before addition

    >>> add_integer(2.9, 0.2)
    2

::

    >>> add_integer(-2.9, -0.2)
    -2

Floating and non-floating values can be combined

::

    >>> add_integer(2.3, -3)
    -1

Second argument is optional because it is set by defualt value 98

::

    >>> add_integer(2)
    100

Non_numbers
===========

``add_integer()`` expects either the two arguments integers or floats.
if they are not a TypeError is raised.

::

    >>> add_integer("Hello", 3)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(2, "Hello")
    Traceback (most recent call last):
    TypeError: b must be an integer

::

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(2.3, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

if all arguments are non-integer and non-floating value
TypeError is raised for the first argument only

::

    >>> add_integer("Hello", "There")
    Traceback (most recent call last):
    TypeError: a must be an integer

if infinity is provided the function failed

::

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: can't convert float infinity to integer

::

    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    OverflowError: can't convert float infinity to integer

And again with NaN values

::

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: can't convert float NaN to integer

::

    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ValueError: can't convert float NaN to integer
